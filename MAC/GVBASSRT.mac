         Push PRINT,NOPRINT
         Print OFF,NOPRINT
.*
.* (C) COPYRIGHT IBM CORPORATION 2008, 2021.
.*     Copyright Contributors to the GenevaERS Project.
.* SPDX-License-Identifier: Apache-2.0
.*
.**********************************************************************
.*
.*  Licensed under the Apache License, Version 2.0 (the "License");
.*  you may not use this file except in compliance with the License.
.*  You may obtain a copy of the License at
.*
.*     http://www.apache.org/licenses/LICENSE-2.0
.*
.*  Unless required by applicable law or agreed to in writing, software
.*  distributed under the License is distributed on an "AS IS" BASIS,
.*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
.*  or implied.
.*  See the License for the specific language governing permissions
.*  and limitations under the License.
.*
         Print ON,NOPRINT
.**********************************************************************
.*                                                                    *
.* This macro allows the use of the ASSERT statement in source code   *
.* to check a value or values at assembly time, to ensure they are    *
.* as expected.                                                       *
.*                                                                    *
.* An assembly time addressability diagnostic will be generated if    *
.* the specified assertion is not correct.                            *
.*                                                                    *
.* Required syntax:                                                   *
.*                                                                    *
.* ASSERT Operand1,Operator,Operand2                                  *
.*                                                                    *
.* Operand1   A standard assembler expression.                        *
.*                                                                    *
.* Operator   A comparison operator: EQ, NE, GE, GT, LE, LT.          *
.*                                                                    *
.* Operand2   A second standard assembler expression.                 *
.*                                                                    *
.**********************************************************************
         Print OFF,NOPRINT
         Macro
         GVBASSRT &Operand1,      First operand to be tested           +
               &Operator,         Test to be performed                 +
               &Operand2          Second operand to be tested
         LclC  &OperUC
&OperUC  SetC  (UPPER '&Operator')
.**********************************************************************
.*                                                                    *
.* The supplied operator determines the address calculation to be     *
.* performed. An incorrect operator will generate a diagnostic error. *
.*                                                                    *
.* An incorrect calculation will generate an assembly time            *
.* addressability diagnostic.                                         *
.*                                                                    *
.**********************************************************************
         AIf   ('&OperUC' EQ 'EQ').EQ
         AIf   ('&OperUC' EQ 'NE').NE
         AIf   ('&OperUC' EQ 'GE').GE
         AIf   ('&OperUC' EQ 'GT').GT
         AIf   ('&OperUC' EQ 'LE').LE
         AIf   ('&OperUC' EQ 'LT').LT
         MNote 8,'Operator &OperUC rejected. Valid operators are EQ,NE,+
               GE,GT,LE,LT'
         AGo   .Exit
.EQ      DC    0SL2((&Operand1-(&Operand2))/(&Operand2-(&Operand1)))
         AGo   .Exit
.NE      DC    0SL2((&Operand1-(&Operand2))/(&Operand1-(&Operand2))-1)
         AGo   .Exit
.GE      DC    0SL2((&Operand1-(&Operand2)-4095)/4096)
         AGo   .Exit
.GT      DC    0SL2((&Operand1-(&Operand2)-4096)/4096)
         AGo   .Exit
.LE      DC    0SL2((-(&Operand1)+&Operand2-4095)/4096)
         AGo   .Exit
.LT      DC    0SL2((-(&Operand1)+&Operand2-4096)/4096)
.Exit    ANOp
         MEnd
.**********************************************************************
.*                                                                    *
.* Use OpSyn to allow the use of ASSERT as a statement verb instead   *
.* of GVBASSRT.                                                       *
.*                                                                    *
.**********************************************************************
ASSERT   OpSyn GVBASSRT
         Pop PRINT,NOPRINT
